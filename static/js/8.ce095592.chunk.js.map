{"version":3,"sources":["hoc/withAuthRedirect.js","components/Main/Music/Music.module.css","components/Main/Music/MB/MusicBase.jsx","components/Main/Music/MusicPage.jsx","components/Main/Music/MusicPageContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","MusicBase","className","css","navigation","item","soundid","genre","soundgenre","MusicPage","musicPage","musicBase","music","map","m","newMusicBody","newSoundText","newGenre","text","placeholder","onChange","e","newSound","target","value","onNewMusicChange","button","onClick","onSendTrackClick","AuthRedirectComponent","MusicPageContainer","dispatch","addTrackActionCreator","updateNewTrackActionCreator"],"mappings":"6NAKIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAI,gBAJV,GAEXC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBClB7EM,EAAOC,QAAU,CAAC,WAAa,0BAA0B,KAAO,oBAAoB,MAAQ,qBAAqB,QAAU,uBAAuB,SAAW,wBAAwB,KAAO,oBAAoB,OAAS,wB,sFCmB1MC,EAhBG,SAACN,GAGf,OACI,yBAAKO,UAAS,UAAKC,IAAIC,WAAT,YAAuBD,IAAIE,OACrC,yBAAKH,UAAWC,IAAIG,SACfX,EAAMW,SAEX,yBAAKJ,UAAWC,IAAII,OACfZ,EAAMa,c,OC0CRC,EAjDG,SAACd,GAEf,IAAIP,EAAQO,EAAMe,UAEdC,EACAvB,EAAMwB,MAAMC,KAAI,SAAAC,GAAC,OACb,kBAAC,EAAD,CACIR,QAASQ,EAAER,QACXE,WAAYM,EAAEN,gBAGtBO,EAAe3B,EAAM4B,aAWzB,Y,GAAUrB,MAAMN,OAGZ,yBAAKa,UAAWC,IAAII,OACfI,EACD,yBAAKT,UAAWC,IAAIc,UAChB,uBAAGf,UAAWC,IAAIe,MAAlB,iBAEA,8BACIC,YAAY,sBACZC,SAfO,SAACC,GACpB,IAAIC,EAAYD,EAAEE,OAAOC,MACrB7B,EAAM8B,iBAAiBH,IAcfE,MAAOT,IAGX,4BACIb,UAAWC,IAAIuB,OACfC,QAzBO,WACnBhC,EAAMiC,qBAsBE,iBAdmB,kBAAC,IAAD,CAAUhC,GAAK,Y,iBCL9CiC,EAAwBtC,YAAiBkB,GAEvCqB,EAAqBhC,aAlBJ,SAACV,GACpB,MAAO,CAACsB,UAAWtB,EAAMsB,cAGJ,SAACqB,GACtB,MAAO,CACHH,iBAAkB,WACdG,EAASC,gBAEbP,iBAAkB,SAACH,GACfS,EAASE,YAA4BX,QAQtBxB,CAA8C+B,GAE1DC","file":"static/js/8.ce095592.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login/\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Music_navigation__18pEF\",\"item\":\"Music_item__Cweof\",\"genre\":\"Music_genre__1z55F\",\"soundid\":\"Music_soundid__11O0g\",\"newGenre\":\"Music_newGenre__8u_OB\",\"text\":\"Music_text__2AkmW\",\"button\":\"Music_button__bx4cz\"};","import React from \"react\";\r\nimport css from \"./../Music.module.css\";\r\n\r\n\r\nconst MusicBase = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={`${css.navigation} ${css.item}`}>\r\n            <div className={css.soundid}>\r\n                {props.soundid}\r\n            </div>\r\n            <div className={css.genre}>\r\n                {props.soundgenre}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default MusicBase;\r\n","import React from 'react';\r\nimport css from \"./Music.module.css\";\r\nimport MusicBase from \"./MB/MusicBase\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst MusicPage = (props) => {\r\n\r\n    let state = props.musicPage;\r\n\r\n    let musicBase =\r\n        state.music.map(m =>\r\n            <MusicBase\r\n                soundid={m.soundid}\r\n                soundgenre={m.soundgenre}\r\n            />)\r\n\r\n    let newMusicBody = state.newSoundText;\r\n\r\n    let onSendTrackClick = () => {\r\n        props.onSendTrackClick();\r\n    }\r\n\r\n    let onNewMusicChange = (e) => {\r\n        let newSound  = e.target.value;\r\n            props.onNewMusicChange(newSound);\r\n\r\n    }\r\n    if (!this.props.isAuth) return <Redirect to ={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={css.genre}>\r\n            {musicBase}\r\n            <div className={css.newGenre}>\r\n                <p className={css.text}>ADD NEW TRACK</p>\r\n\r\n                <textarea\r\n                    placeholder=\"Drop ya bombs here!\"\r\n                    onChange={onNewMusicChange}\r\n                    value={newMusicBody}\r\n                />\r\n\r\n                <button\r\n                    className={css.button}\r\n                    onClick={onSendTrackClick}>\r\n                    Send track!\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MusicPage;","import React from 'react';\r\nimport {addTrackActionCreator, updateNewTrackActionCreator} from \"../../../redux/musicPage-reducer\";\r\nimport MusicPage from \"./MusicPage\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\n\r\n\r\nlet mapsStateToProps = (state) => {\r\n    return {musicPage: state.musicPage}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSendTrackClick: () => {\r\n            dispatch(addTrackActionCreator());\r\n        },\r\n        onNewMusicChange: (newSound) => {\r\n            dispatch(updateNewTrackActionCreator(newSound));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC\r\nlet AuthRedirectComponent = withAuthRedirect(MusicPage);\r\n\r\nconst MusicPageContainer = connect(mapsStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default MusicPageContainer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}